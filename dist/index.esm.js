import e from"fs";import r from"path";import t from"check-disk-space";import{createHash as n}from"crypto";import{v4 as i}from"uuid";import{dotExtensionToCategotry as o}from"sfs-file-type";import{fileTypeFromBuffer as u}from"file-type";function a(e,r){try{var t=e()}catch(e){return r(e)}return t&&t.then?t.then(void 0,r):t}function s(s){var c=s.publicFolder,l=s.mask,f=s.getFileById,h=s.getFileByHash,d=s.createFile,m=s.logger,v=void 0===m?void 0:m,p=s.uid,y=void 0===p?i:p,P=function(e){return(l.endsWith("/")?l:l+"/")+e},F=function(e){try{return Promise.resolve(f(e)).then(function(e){if(e){var t=e.name;return{filePath:r.join(c,e.hash+e.extension),fileName:t}}})}catch(e){return Promise.reject(e)}};return{resolveFilePath:F,idToUrl:P,urlToId:function(e){return l.endsWith("/")?e.replace(l,""):e.replace(l+"/","")},saveFile:function(t,i){try{return Promise.resolve(a(function(){function a(){var n=r.join(c,l+f);return Promise.resolve(h(l)).then(function(r){function u(){if(r&&i===r.path)return v&&v("File already exists at this location","error"),r.url=P(r.id),r;var t=(null==r?void 0:r.size)||e.statSync(n).size,u=(null==r?void 0:r.type)||o(f),a={id:y(),name:s,extension:f,hash:l,size:t,type:u,last_modified:Date.now(),path:i,publishedAt:Date.now()};return Promise.resolve(d(a)).then(function(e){return e.url=P(e.id),e})}var a=function(){if(!r)return v&&v("SFS: Saving file","success"),Promise.resolve(t.mv(n)).then(function(){});v&&v("SFS: File already uploaded","info")}();return a&&a.then?a.then(u):u()})}var s=decodeURI(t.name),l=n("sha256").update(t.data).digest("hex"),f="",m=r.extname(s),p=function(){if(!m)return Promise.resolve(u(t.data)).then(function(e){e&&(f="."+e.ext)});f=m}();return p&&p.then?p.then(a):a()},function(e){throw v&&v("Upload error","error"),new Error(e)}))}catch(e){return Promise.reject(e)}},deleteFileByHash:function(t){try{try{var n=e.readdirSync(c).find(function(e){return e.split(".")[0]===t});if(!n)throw new Error("File with hash "+t+" not found in "+c);var i=r.join(c,n);e.unlinkSync(i)}catch(e){throw new Error(e)}return Promise.resolve()}catch(e){return Promise.reject(e)}},deleteFileById:function(r){try{return Promise.resolve(a(function(){return Promise.resolve(F(r)).then(function(r){e.unlinkSync(r.filePath)})},function(e){throw new Error(e)}))}catch(e){return Promise.reject(e)}},getDiskUsage:function(e,r){try{return Promise.resolve(t(c))}catch(e){return Promise.reject(e)}}}}export{s as default};
//# sourceMappingURL=index.esm.js.map
